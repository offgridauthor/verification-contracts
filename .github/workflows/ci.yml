---
name: CI

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      # Hardhat connection settings 
      PRIVATE_KEY: "${{ secrets.PRIVATE_KEY }}"
      API_KEY: "${{ secrets.API_KEY }}"
      API_SECRET: "${{ secrets.API.SECRET }}"

    steps:
      - uses: actions/checkout@v2

      - name: Use node@14
        uses: actions/setup-node@v1
        with: {node-version: 14.x}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Node modules cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ~/.cache/node-gyp-cache
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock')
            }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
        env:
          cache-name: v1

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Compile contracts
        run: yarn build

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: artifacts

  propose-upgrade:
    name: Upgrade
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: build
    env:
      # Hardhat connection settings (TODO: use a relayer!)
      PRIVATE_KEY: "${{ secrets.PRIVATE_KEY }}"

    steps:
      - uses: actions/checkout@v2

      - name: Use node@14
        uses: actions/setup-node@v1
        with: {node-version: 14.x}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Node modules cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ~/.cache/node-gyp-cache
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock')
            }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
        env:
          cache-name: v1

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Get build artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: artifacts

      - name: Show downloaded build artifacts
        run: ls -R artifacts

      - name: Propose upgrade to new version
        run: yarn hardhat run scripts/v2-propose-and-verify.js --network goerli
        env:
          # URL used to reference the bytecode verification
          WORKFLOW_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          # Address of the contract to upgrade
          ADDRESS: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
          # Upgradeability owner
          OWNER: "0x6084fBE2Aa96Bb131D6Bc7Bd3BE786882cfA250F"
          # API keys to Defender
          API_KEY: "${{ secrets.API_KEY }}"
          API_SECRET: "${{ secrets.API_SECRET }}"
          